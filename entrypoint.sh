#!/bin/bash

set -e

# echo "🔐 Checking for SSH key..."
# KEY_DIR="/root/.ssh"
# PRIVATE_KEY="$KEY_DIR/id_rsa"
# PUBLIC_KEY="$KEY_DIR/id_rsa.pub"

# mkdir -p "$KEY_DIR"

# # Generate SSH key if not provided
# if [[ -z "$private_key_path" || ! -f "$private_key_path" ]]; then
#   echo "🔧 No private key provided. Generating new SSH key..."
#   ssh-keygen -t rsa -b 4096 -f "$PRIVATE_KEY" -N "" <<< y
#   private_key_path="$PRIVATE_KEY"
# else
#   echo "✅ Using provided private key: $private_key_path"
# fi

# ssh_public_key=$(cat "${private_key_path}.pub")

# # Upload SSH key to DigitalOcean and get key ID
# echo "📡 Uploading SSH key to DigitalOcean..."
# UPLOAD_RES=$(curl -s -X POST "https://api.digitalocean.com/v2/account/keys" \
#   -H "Authorization: Bearer $do_access_token" \
#   -H "Content-Type: application/json" \
#   -d "{\"name\": \"tofuhub-$(date +%s)\", \"public_key\": \"$ssh_public_key\"}")

# # Extract SSH key ID
# do_ssh_key_ids=$(echo "$UPLOAD_RES" | grep -o '"id":[0-9]*' | cut -d: -f2 | tr -d ' ')
# echo "🆔 Received SSH key ID: $do_ssh_key_ids"

echo "🧠 Generating terraform.tfvars from injected environment variables..."

# Path to where we want to generate the tfvars
OUTPUT_DIR="/mnt/volume"
TFVARS_FILE="$OUTPUT_DIR/terraform.tfvars"

# Start fresh
echo "# Auto-generated by entrypoint.sh" > "$TFVARS_FILE"

# List of expected variable names
vars=(
  do_access_token
  do_project_name
  # do_domain
  # do_project_description
  # do_vpc_region
  # do_vpc_name
  # do_ssh_firewall_name
  # do_db_name
  # do_db_engine
  # do_db_version
  # do_db_size
  # do_db_region
  # do_db_node_count
  # do_mosquitto_name
  # do_mosquitto_region
  # do_mosquitto_size
  # do_mosquitto_image
  # do_mosquitto_username
  # do_mosquitto_password
  # do_mosquitto_firewall_name
  # do_chirpstack_droplet_count
  # do_chirpstack_droplet_size
  # do_chirpstack_droplet_image
  # do_chirpstack_droplet_region
  # do_chirpstack_firewall_name
  # redis_droplet_name
  # redis_droplet_size
  # redis_droplet_image
  # redis_region
  # redis_password
  # do_loadbalancer_name
  # do_loadbalancer_region
  # do_lorawan_subdomain
  # do_ssh_key_ids
  # private_key_path
)

# Generate the tfvars file
for var in "${vars[@]}"; do
  val="${!var}"

  if [[ -n "$val" ]]; then
    if [[ "$var" == "do_ssh_key_ids" ]]; then
      echo "$var = [\"$val\"]" >> "$TFVARS_FILE"
    elif [[ "$val" =~ ^[0-9]+$ ]]; then
      echo "$var = $val" >> "$TFVARS_FILE"
    else
      echo "$var = \"$val\"" >> "$TFVARS_FILE"
    fi
  else
    echo "⚠️  Warning: $var is not set in the environment"
  fi
done

echo "✅ terraform.tfvars generated at $TFVARS_FILE:"
cat "$TFVARS_FILE"
cp -r /app/. "$OUTPUT_DIR"
cd "$OUTPUT_DIR"

# Run OpenTofu in the /outputs directory
echo "🚀 Running OpenTofu..."
# tofu init -backend-config="path=$OUTPUT_DIR/terraform.tfstate"
tofu init
tofu plan
tofu apply -auto-approve

# Extract outputs and send to runner
echo "📤 Capturing outputs..."
echo OUTPUT_JSON=$(tofu output -json)

# echo "📡 Sending outputs to runner container..."
# echo "$OUTPUT_JSON" | curl --location 'http://host.docker.internal:3030/state/vars' \
#   --header 'Content-Type: application/json' \
#   --data-binary @-

